#loc = loc(unknown)
module @block_cache_0 attributes {module.FLOPs = 598976996 : i64, module.chip = "ALL", module.platform = "ONNX", module.state = "TOP_F32", module.top_run_mode = "STATIC", module.weight_file = "block_cache_0_top_f32_all_weight.npz"} {
  func.func @main(%arg0: tensor<1x1x{hidden_size}xf32> loc(unknown), %arg1: tensor<1x1xsi32> loc(unknown), %arg2: tensor<1x1x1x{seq_next}xf32> loc(unknown), %arg3: tensor<1x{seq_length}x{num_key_value_heads}x{head_dim}xf32> loc(unknown), %arg4: tensor<1x{seq_length}x{num_key_value_heads}x{head_dim}xf32> loc(unknown)) -> (tensor<1x1x{hidden_size}xf32>, tensor<1x1x{num_key_value_heads}x{head_dim}xf32>, tensor<1x1x{num_key_value_heads}x{head_dim}xf32>) {
    %0 = "top.None"() : () -> none loc(#loc)
    %1 = "top.Input"(%arg0) {channel_format = "nchw", do_preprocess = true, keep_aspect_ratio = false, keep_ratio_mode = "letterbox", mean = [0.000000e+00, 0.000000e+00, 0.000000e+00], pad_type = "center", pad_value = 0 : i64, pixel_format = "bgr", scale = [1.000000e+00, 1.000000e+00, 1.000000e+00]} : (tensor<1x1x{hidden_size}xf32>) -> tensor<1x1x{hidden_size}xf32> loc(#loc1)
    %2 = "top.Input"(%arg1) {do_preprocess = true} : (tensor<1x1xsi32>) -> tensor<1x1xf32> loc(#loc2)
    %3 = "top.Input"(%arg2) {channel_format = "nchw", do_preprocess = true, keep_aspect_ratio = false, keep_ratio_mode = "letterbox", mean = [0.000000e+00, 0.000000e+00, 0.000000e+00], pad_type = "center", pad_value = 0 : i64, pixel_format = "bgr", scale = [1.000000e+00, 1.000000e+00, 1.000000e+00]} : (tensor<1x1x1x{seq_next}xf32>) -> tensor<1x1x1x{seq_next}xf32> loc(#loc3)
    %4 = "top.Input"(%arg3) {do_preprocess = true} : (tensor<1x{seq_length}x{num_key_value_heads}x{head_dim}xf32>) -> tensor<1x{seq_length}x{num_key_value_heads}x{head_dim}xf32> loc(#loc4)
    %5 = "top.Input"(%arg4) {do_preprocess = true} : (tensor<1x{seq_length}x{num_key_value_heads}x{head_dim}xf32>) -> tensor<1x{seq_length}x{num_key_value_heads}x{head_dim}xf32> loc(#loc5)
    %6 = "top.Weight"() : () -> tensor<1x1x{hidden_size}xf32> loc(#loc6)
    %7 = "top.RMSNorm"(%1, %6) {eps = 9.9999999747524271E-7 : f64} : (tensor<1x1x{hidden_size}xf32>, tensor<1x1x{hidden_size}xf32>) -> tensor<1x1x{hidden_size}xf32> loc(#loc7)
    %8 = "top.Weight"() : () -> tensor<{hidden_size}x{hidden_size}xf32> loc(#loc8)
    %9 = "top.Weight"() : () -> tensor<1x1x{hidden_size}xf32> loc(#loc9)
    %10 = "top.MatMul"(%7, %8, %9) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x1x{hidden_size}xf32>, tensor<{hidden_size}x{hidden_size}xf32>, tensor<1x1x{hidden_size}xf32>) -> tensor<1x1x{hidden_size}xf32> loc(#loc10)
    %11 = "top.Weight"() : () -> tensor<{hidden_size}x{kv_dim}xf32> loc(#loc11)
    %12 = "top.Weight"() : () -> tensor<1x1x{kv_dim}xf32> loc(#loc12)
    %13 = "top.MatMul"(%7, %11, %12) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x1x{hidden_size}xf32>, tensor<{hidden_size}x{kv_dim}xf32>, tensor<1x1x{kv_dim}xf32>) -> tensor<1x1x{kv_dim}xf32> loc(#loc13)
    %14 = "top.Weight"() : () -> tensor<{hidden_size}x{kv_dim}xf32> loc(#loc14)
    %15 = "top.Weight"() : () -> tensor<1x1x{kv_dim}xf32> loc(#loc15)
    %16 = "top.MatMul"(%7, %14, %15) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x1x{hidden_size}xf32>, tensor<{hidden_size}x{kv_dim}xf32>, tensor<1x1x{kv_dim}xf32>) -> tensor<1x1x{kv_dim}xf32> loc(#loc16)
    %17 = "top.Reshape"(%10) {flatten_start_dim = -1 : i64, shape = [1, 1, {num_attention_heads}, {head_dim}]} : (tensor<1x1x{hidden_size}xf32>) -> tensor<1x1x{num_attention_heads}x{head_dim}xf32> loc(#loc17)
    %18 = "top.Reshape"(%13) {flatten_start_dim = -1 : i64, shape = [1, 1, {num_key_value_heads}, {head_dim}]} : (tensor<1x1x{kv_dim}xf32>) -> tensor<1x1x{num_key_value_heads}x{head_dim}xf32> loc(#loc18)
    %19 = "top.Reshape"(%16) {flatten_start_dim = -1 : i64, shape = [1, 1, {num_key_value_heads}, {head_dim}]} : (tensor<1x1x{kv_dim}xf32>) -> tensor<1x1x{num_key_value_heads}x{head_dim}xf32> loc(#loc19)
    %20 = "top.Weight"() : () -> tensor<{seq_length}x1x{head_dim}xf32> loc(#loc20)
    %21 = "top.Gather"(%20, %2) {axis = 0 : si32, is_scalar = false, keepdims = true} : (tensor<{seq_length}x1x{head_dim}xf32>, tensor<1x1xf32>) -> tensor<1x1x1x{head_dim}xf32> loc(#loc21)
    %22 = "top.Weight"() : () -> tensor<{seq_length}x1x{head_dim}xf32> loc(#loc22)
    %23 = "top.Gather"(%22, %2) {axis = 0 : si32, is_scalar = false, keepdims = true} : (tensor<{seq_length}x1x{head_dim}xf32>, tensor<1x1xf32>) -> tensor<1x1x1x{head_dim}xf32> loc(#loc23)
    %24 = "top.Mul"(%17, %21) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{num_attention_heads}x{head_dim}xf32>, tensor<1x1x1x{head_dim}xf32>) -> tensor<1x1x{num_attention_heads}x{head_dim}xf32> loc(#loc24)
    %25 = "top.Slice"(%17, %0, %0, %0) {axes = [], ends = [1, 1, {num_attention_heads}, {half_head_dim}], hasparamConvert_axes = [3], offset = [0, 0, 0, 0], steps = [1, 1, 1, 1]} : (tensor<1x1x{num_attention_heads}x{head_dim}xf32>, none, none, none) -> tensor<1x1x{num_attention_heads}x{half_head_dim}xf32> loc(#loc25)
    %26 = "top.Slice"(%17, %0, %0, %0) {axes = [], ends = [1, 1, {num_attention_heads}, 2147482624], hasparamConvert_axes = [3], offset = [0, 0, 0, {half_head_dim}], steps = [1, 1, 1, 1]} : (tensor<1x1x{num_attention_heads}x{head_dim}xf32>, none, none, none) -> tensor<1x1x{num_attention_heads}x{half_head_dim}xf32> loc(#loc26)
    %27 = "top.MulConst"(%26) {const_val = -1.000000e+00 : f64, do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{num_attention_heads}x{half_head_dim}xf32>) -> tensor<1x1x{num_attention_heads}x{half_head_dim}xf32> loc(#loc27)
    %28 = "top.Concat"(%27, %25) {axis = 3 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<1x1x{num_attention_heads}x{half_head_dim}xf32>, tensor<1x1x{num_attention_heads}x{half_head_dim}xf32>) -> tensor<1x1x{num_attention_heads}x{head_dim}xf32> loc(#loc28)
    %29 = "top.Mul"(%28, %23) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{num_attention_heads}x{head_dim}xf32>, tensor<1x1x1x{head_dim}xf32>) -> tensor<1x1x{num_attention_heads}x{head_dim}xf32> loc(#loc29)
    %30 = "top.Add"(%24, %29) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{num_attention_heads}x{head_dim}xf32>, tensor<1x1x{num_attention_heads}x{head_dim}xf32>) -> tensor<1x1x{num_attention_heads}x{head_dim}xf32> loc(#loc30)
    %31 = "top.Mul"(%18, %21) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{num_key_value_heads}x{head_dim}xf32>, tensor<1x1x1x{head_dim}xf32>) -> tensor<1x1x{num_key_value_heads}x{head_dim}xf32> loc(#loc31)
    %32 = "top.Slice"(%18, %0, %0, %0) {axes = [], ends = [1, 1, {num_key_value_heads}, {half_head_dim}], hasparamConvert_axes = [3], offset = [0, 0, 0, 0], steps = [1, 1, 1, 1]} : (tensor<1x1x{num_key_value_heads}x{head_dim}xf32>, none, none, none) -> tensor<1x1x{num_key_value_heads}x{half_head_dim}xf32> loc(#loc32)
    %33 = "top.Slice"(%18, %0, %0, %0) {axes = [], ends = [1, 1, {num_key_value_heads}, 2147482624], hasparamConvert_axes = [3], offset = [0, 0, 0, {half_head_dim}], steps = [1, 1, 1, 1]} : (tensor<1x1x{num_key_value_heads}x{head_dim}xf32>, none, none, none) -> tensor<1x1x{num_key_value_heads}x{half_head_dim}xf32> loc(#loc33)
    %34 = "top.MulConst"(%33) {const_val = -1.000000e+00 : f64, do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{num_key_value_heads}x{half_head_dim}xf32>) -> tensor<1x1x{num_key_value_heads}x{half_head_dim}xf32> loc(#loc34)
    %35 = "top.Concat"(%34, %32) {axis = 3 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<1x1x{num_key_value_heads}x{half_head_dim}xf32>, tensor<1x1x{num_key_value_heads}x{half_head_dim}xf32>) -> tensor<1x1x{num_key_value_heads}x{head_dim}xf32> loc(#loc35)
    %36 = "top.Mul"(%35, %23) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{num_key_value_heads}x{head_dim}xf32>, tensor<1x1x1x{head_dim}xf32>) -> tensor<1x1x{num_key_value_heads}x{head_dim}xf32> loc(#loc36)
    %37 = "top.Add"(%31, %36) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{num_key_value_heads}x{head_dim}xf32>, tensor<1x1x{num_key_value_heads}x{head_dim}xf32>) -> tensor<1x1x{num_key_value_heads}x{head_dim}xf32> loc(#loc37)
    %38 = "top.Concat"(%4, %37) {axis = 1 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<1x{seq_length}x{num_key_value_heads}x{head_dim}xf32>, tensor<1x1x{num_key_value_heads}x{head_dim}xf32>) -> tensor<1x{seq_next}x{num_key_value_heads}x{head_dim}xf32> loc(#loc38)
    %39 = "top.Concat"(%5, %19) {axis = 1 : si32, do_relu = false, relu_limit = -1.000000e+00 : f64, round_mode = "HalfAwayFromZero"} : (tensor<1x{seq_length}x{num_key_value_heads}x{head_dim}xf32>, tensor<1x1x{num_key_value_heads}x{head_dim}xf32>) -> tensor<1x{seq_next}x{num_key_value_heads}x{head_dim}xf32> loc(#loc39)
    %40 = "top.Unsqueeze"(%38) {axes = [3]} : (tensor<1x{seq_next}x{num_key_value_heads}x{head_dim}xf32>) -> tensor<1x{seq_next}x{num_key_value_heads}x1x{head_dim}xf32> loc(#loc40)
    %41 = "top.Tile"(%40) {tile = [1, 1, 1, 7, 1]} : (tensor<1x{seq_next}x{num_key_value_heads}x1x{head_dim}xf32>) -> tensor<1x{seq_next}x{num_key_value_heads}x7x{head_dim}xf32> loc(#loc41)
    %42 = "top.Reshape"(%41) {flatten_start_dim = -1 : i64, shape = [1, {seq_next}, {num_attention_heads}, {head_dim}]} : (tensor<1x{seq_next}x{num_key_value_heads}x7x{head_dim}xf32>) -> tensor<1x{seq_next}x{num_attention_heads}x{head_dim}xf32> loc(#loc42)
    %43 = "top.Unsqueeze"(%39) {axes = [3]} : (tensor<1x{seq_next}x{num_key_value_heads}x{head_dim}xf32>) -> tensor<1x{seq_next}x{num_key_value_heads}x1x{head_dim}xf32> loc(#loc43)
    %44 = "top.Tile"(%43) {tile = [1, 1, 1, 7, 1]} : (tensor<1x{seq_next}x{num_key_value_heads}x1x{head_dim}xf32>) -> tensor<1x{seq_next}x{num_key_value_heads}x7x{head_dim}xf32> loc(#loc44)
    %45 = "top.Reshape"(%44) {flatten_start_dim = -1 : i64, shape = [1, {seq_next}, {num_attention_heads}, {head_dim}]} : (tensor<1x{seq_next}x{num_key_value_heads}x7x{head_dim}xf32>) -> tensor<1x{seq_next}x{num_attention_heads}x{head_dim}xf32> loc(#loc45)
    %46 = "top.Permute"(%30) {order = [0, 2, 1, 3]} : (tensor<1x1x{num_attention_heads}x{head_dim}xf32>) -> tensor<1x{num_attention_heads}x1x{head_dim}xf32> loc(#loc46)
    %47 = "top.Permute"(%42) {order = [0, 2, 3, 1]} : (tensor<1x{seq_next}x{num_attention_heads}x{head_dim}xf32>) -> tensor<1x{num_attention_heads}x{head_dim}x{seq_next}xf32> loc(#loc47)
    %48 = "top.MatMul"(%46, %47, %0) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x{num_attention_heads}x1x{head_dim}xf32>, tensor<1x{num_attention_heads}x{head_dim}x{seq_next}xf32>, none) -> tensor<1x{num_attention_heads}x1x{seq_next}xf32> loc(#loc48)
    %49 = "top.MulConst"(%48) {const_val = {scaling} : f64, do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x{num_attention_heads}x1x{seq_next}xf32>) -> tensor<1x{num_attention_heads}x1x{seq_next}xf32> loc(#loc49)
    %50 = "top.Add"(%49, %3) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x{num_attention_heads}x1x{seq_next}xf32>, tensor<1x1x1x{seq_next}xf32>) -> tensor<1x{num_attention_heads}x1x{seq_next}xf32> loc(#loc50)
    %51 = "top.Softmax"(%50) {axis = 3 : si32, beta = 1.000000e+00 : f64, log = false, round_mode = "HalfAwayFromZero"} : (tensor<1x{num_attention_heads}x1x{seq_next}xf32>) -> tensor<1x{num_attention_heads}x1x{seq_next}xf32> loc(#loc51)
    %52 = "top.Permute"(%45) {order = [0, 2, 1, 3]} : (tensor<1x{seq_next}x{num_attention_heads}x{head_dim}xf32>) -> tensor<1x{num_attention_heads}x{seq_next}x{head_dim}xf32> loc(#loc52)
    %53 = "top.MatMul"(%51, %52, %0) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x{num_attention_heads}x1x{seq_next}xf32>, tensor<1x{num_attention_heads}x{seq_next}x{head_dim}xf32>, none) -> tensor<1x{num_attention_heads}x1x{head_dim}xf32> loc(#loc53)
    %54 = "top.Permute"(%53) {order = [0, 2, 1, 3]} : (tensor<1x{num_attention_heads}x1x{head_dim}xf32>) -> tensor<1x1x{num_attention_heads}x{head_dim}xf32> loc(#loc54)
    %55 = "top.Reshape"(%54) {flatten_start_dim = -1 : i64, shape = [1, 1, {hidden_size}]} : (tensor<1x1x{num_attention_heads}x{head_dim}xf32>) -> tensor<1x1x{hidden_size}xf32> loc(#loc55)
    %56 = "top.Weight"() : () -> tensor<{hidden_size}x{hidden_size}xf32> loc(#loc56)
    %57 = "top.MatMul"(%55, %56, %0) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x1x{hidden_size}xf32>, tensor<{hidden_size}x{hidden_size}xf32>, none) -> tensor<1x1x{hidden_size}xf32> loc(#loc57)
    %58 = "top.Add"(%1, %57) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{hidden_size}xf32>, tensor<1x1x{hidden_size}xf32>) -> tensor<1x1x{hidden_size}xf32> loc(#loc58)
    %59 = "top.Weight"() : () -> tensor<1x1x{hidden_size}xf32> loc(#loc59)
    %60 = "top.RMSNorm"(%58, %59) {eps = 9.9999999747524271E-7 : f64} : (tensor<1x1x{hidden_size}xf32>, tensor<1x1x{hidden_size}xf32>) -> tensor<1x1x{hidden_size}xf32> loc(#loc60)
    %61 = "top.Weight"() : () -> tensor<{hidden_size}x{intermediate_size}xf32> loc(#loc61)
    %62 = "top.MatMul"(%60, %61, %0) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x1x{hidden_size}xf32>, tensor<{hidden_size}x{intermediate_size}xf32>, none) -> tensor<1x1x{intermediate_size}xf32> loc(#loc62)
    %63 = "top.SiLU"(%62) : (tensor<1x1x{intermediate_size}xf32>) -> tensor<1x1x{intermediate_size}xf32> loc(#loc63)
    %64 = "top.Weight"() : () -> tensor<{hidden_size}x{intermediate_size}xf32> loc(#loc64)
    %65 = "top.MatMul"(%60, %64, %0) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x1x{hidden_size}xf32>, tensor<{hidden_size}x{intermediate_size}xf32>, none) -> tensor<1x1x{intermediate_size}xf32> loc(#loc65)
    %66 = "top.Mul"(%63, %65) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{intermediate_size}xf32>, tensor<1x1x{intermediate_size}xf32>) -> tensor<1x1x{intermediate_size}xf32> loc(#loc66)
    %67 = "top.Weight"() : () -> tensor<{intermediate_size}x{hidden_size}xf32> loc(#loc67)
    %68 = "top.MatMul"(%66, %67, %0) {do_relu = false, hdim_is_batch = false, keep_dims = true, left_transpose = false, output_transpose = false, relu_limit = -1.000000e+00 : f64, right_transpose = false} : (tensor<1x1x{intermediate_size}xf32>, tensor<{intermediate_size}x{hidden_size}xf32>, none) -> tensor<1x1x{hidden_size}xf32> loc(#loc68)
    %69 = "top.Add"(%58, %68) {do_relu = false, is_scalar = false, relu_limit = -1.000000e+00 : f64} : (tensor<1x1x{hidden_size}xf32>, tensor<1x1x{hidden_size}xf32>) -> tensor<1x1x{hidden_size}xf32> loc(#loc69)
    return %69, %37, %19 : tensor<1x1x{hidden_size}xf32>, tensor<1x1x{num_key_value_heads}x{head_dim}xf32>, tensor<1x1x{num_key_value_heads}x{head_dim}xf32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("input_states")
#loc2 = loc("position_ids")
#loc3 = loc("attention_mask")
#loc4 = loc("history_k")
#loc5 = loc("history_v")
#loc6 = loc("input_layernorm.weight")
#loc7 = loc("/input_layernorm/Mul_1_output_0_Mul")
#loc8 = loc("/self_attn/q_proj/Transpose_output_0")
#loc9 = loc("self_attn.q_proj.bias")
#loc10 = loc("/self_attn/q_proj/Add_output_0_Add")
#loc11 = loc("/self_attn/k_proj/Transpose_output_0")
#loc12 = loc("self_attn.k_proj.bias")
#loc13 = loc("/self_attn/k_proj/Add_output_0_Add")
#loc14 = loc("/self_attn/v_proj/Transpose_output_0")
#loc15 = loc("self_attn.v_proj.bias")
#loc16 = loc("/self_attn/v_proj/Add_output_0_Add")
#loc17 = loc("/self_attn/Reshape_output_0_Reshape")
#loc18 = loc("/self_attn/Reshape_1_output_0_Reshape")
#loc19 = loc("past_v_Reshape")
#loc20 = loc("/self_attn/Constant_6_output_0")
#loc21 = loc("/self_attn/Gather_output_0_Gather")
#loc22 = loc("/self_attn/Constant_7_output_0")
#loc23 = loc("/self_attn/Gather_1_output_0_Gather")
#loc24 = loc("/self_attn/Mul_output_0_Mul")
#loc25 = loc("/self_attn/Slice_output_0_Slice")
#loc26 = loc("/self_attn/Slice_1_output_0_Slice")
#loc27 = loc("/self_attn/Neg_output_0_Neg")
#loc28 = loc("/self_attn/Concat_3_output_0_Concat")
#loc29 = loc("/self_attn/Mul_1_output_0_Mul")
#loc30 = loc("/self_attn/Add_output_0_Add")
#loc31 = loc("/self_attn/Mul_2_output_0_Mul")
#loc32 = loc("/self_attn/Slice_2_output_0_Slice")
#loc33 = loc("/self_attn/Slice_3_output_0_Slice")
#loc34 = loc("/self_attn/Neg_1_output_0_Neg")
#loc35 = loc("/self_attn/Concat_4_output_0_Concat")
#loc36 = loc("/self_attn/Mul_3_output_0_Mul")
#loc37 = loc("past_k_Add")
#loc38 = loc("/self_attn/Concat_5_output_0_Concat")
#loc39 = loc("/self_attn/Concat_6_output_0_Concat")
#loc40 = loc("/self_attn/Unsqueeze_28_output_0_Unsqueeze")
#loc41 = loc("/self_attn/Expand_output_0_Expand")
#loc42 = loc("/self_attn/Reshape_4_output_0_Reshape")
#loc43 = loc("/self_attn/Unsqueeze_38_output_0_Unsqueeze")
#loc44 = loc("/self_attn/Expand_1_output_0_Expand")
#loc45 = loc("/self_attn/Reshape_6_output_0_Reshape")
#loc46 = loc("/self_attn/Transpose_output_0_Transpose")
#loc47 = loc("/self_attn/Transpose_1_output_0_Transpose")
#loc48 = loc("/self_attn/MatMul_output_0_MatMul")
#loc49 = loc("/self_attn/Div_output_0_Div")
#loc50 = loc("/self_attn/Add_2_output_0_Add")
#loc51 = loc("/self_attn/Softmax_output_0_Softmax")
#loc52 = loc("/self_attn/Transpose_2_output_0_Transpose")
#loc53 = loc("/self_attn/MatMul_1_output_0_MatMul")
#loc54 = loc("/self_attn/Transpose_3_output_0_Transpose")
#loc55 = loc("/self_attn/Reshape_7_output_0_Reshape")
#loc56 = loc("/self_attn/o_proj/Transpose_output_0")
#loc57 = loc("/self_attn/o_proj/MatMul_output_0_MatMul")
#loc58 = loc("/Add_output_0_Add")
#loc59 = loc("post_attention_layernorm.weight")
#loc60 = loc("/post_attention_layernorm/Mul_1_output_0_Mul")
#loc61 = loc("/mlp/gate_proj/Transpose_output_0")
#loc62 = loc("/mlp/gate_proj/MatMul_output_0_MatMul")
#loc63 = loc("/mlp/act_fn/Mul_output_0_Mul")
#loc64 = loc("/mlp/up_proj/Transpose_output_0")
#loc65 = loc("/mlp/up_proj/MatMul_output_0_MatMul")
#loc66 = loc("/mlp/Mul_output_0_Mul")
#loc67 = loc("/mlp/down_proj/Transpose_output_0")
#loc68 = loc("/mlp/down_proj/MatMul_output_0_MatMul")
#loc69 = loc("hidden_states_Add")

